#!/usr/bin/env node

var optimist = require('optimist');
var argv = optimist
      .usage('Filter and modify a JSON stream\nUsage: jku [-p] [-s <SEP>] [-f <FILTER>] [-t <TRANSFORM>]')
      .alias('f', 'filter')
      .string('f')
      .describe('f', 'An expression to filter by')
      .alias('t', 'transform')
      .string('t')
      .describe('t', 'Transform expression')
      .alias('p', 'pretty')
      .boolean('p')
      .default('p', false)
      .describe('p', 'Pretty-print resulting JSON')
      .alias('r', 'require')
      .string('r')
      .default('r', [])
      .describe('r', 'Require file')
      .alias('s', 'separator')
      .default('s', '	')
      .string('s')
      .describe('s', 'The separator with which to join arrays')
      .argv;

if (!argv.f && !argv.t) {
  optimist.showHelp();
  console.error('Please supply a filter and/or a transform.');
  process.exit(0);
}

if (Object.prototype.toString.call(argv.require) !== '[object Array]') {
  argv.require = [argv.require];
}

if (argv.require) {
  var path = require('path');
  for(var i = 0; i < argv.require.length; i++) {
    require(path.resolve(argv.require[i]));
  }
}

var stdin = process.stdin;
stdin.resume();
stdin.setEncoding('utf8');

var Jku = require('../lib/jku');

var jku = new Jku({
  filter: argv.filter,
  transform: argv.transform,
  pretty: argv.pretty,
  separator: argv.separator
});

jku.run(stdin, process.stdout);